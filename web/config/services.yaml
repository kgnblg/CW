# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    public_directory: '%kernel.project_dir%/public'
    upload_directory: '%public_directory%/uploads'
    test_directory: '%public_directory%/tests'
    test_image: 'lena.png'
    aws_key: '%env(resolve:AWS_KEY)%'
    aws_secret: '%env(resolve:AWS_SECRET)%'
    aws_region: '%env(resolve:AWS_REGION)%'
    aws_s3_bucket: '%env(resolve:AWS_S3_BUCKET)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $publicPath: '%public_directory%'
            $uploadPath: '%upload_directory%'
            $testPath: '%test_directory%'
            $testImage: '%test_image%'
            $awsKey: '%aws_key%'
            $awsSecret: '%aws_secret%'
            $awsRegion: '%aws_region%'
            $awsBucket: '%aws_s3_bucket%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\ApiExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }